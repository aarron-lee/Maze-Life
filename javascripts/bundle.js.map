{"version":3,"sources":["webpack:///webpack/bootstrap 2ccde42c78bca2bb3d75","webpack:///./javascripts/maze_node.js","webpack:///./javascripts/main.js","webpack:///./javascripts/maze_grid.js"],"names":["MazeNode","pos","walls","visited","directions","forEach","direction","htmlnode","document","createElement","classList","add","id","setWalls","resetNode","bind","calculateHCost","addAllWalls","parent","pathNode","activeStatus","isCurrent","isGoal","hCost","fCost","gCost","includes","removeWalls","remove","classes","c","className","disableActive","endPos","a","b","Math","sqrt","handleMazeExtras","maze","buttonsToEnable","generateMazeForm","querySelector","astarGrid","streetGridButton","slider","checkbox","defaultValue","disableButtons","buttonsToDisable","button","disabled","timers","querySelectorAll","addEventListener","e","preventDefault","el","innerHTML","generateMaze","checked","generateAstarGrid","generateStreetGrid","handleSearchExtras","dfsButton","bfsButton","astarButton","dfs","bfs","aStar","handleModalButtons","generatorsModalButton","getElementById","solversModalButton","modalDiv","html","generateMazeButton","buttons","root","window","appendChild","grid","MazeGrid","dimensions","mazeNodes","Array","idx","constructGrid","carveWall","checkIfLegal","carveWallsBetweenNodes","nextPos","validPos","neighborNodes","validNeighborNodes","createMaze","animateMazeCreation","getNode","dfsearch","bfsearch","resetPaths","aStarSearch","mazeSteps","visitedPath","instant","startingPos","resetNodes","resetVisited","i","length","enableButtons","setGoal","j","currentNode","row","fillSurroundingWall","col","toggle","stack","foundNode","animateVisitedPath","queue","openSet","openList","from","node","startPos","Set","closedList","getLowestFCost","push","delete","Object","keys","neighbor","has","gCostIsBest","size","currentPos","shuffle","validMoves","concat","n","pop","current","shift","timerId","timer","animationSpeed","value","startTime","Date","currentTime","intervalId","setInterval","toggleCurrent","setActive","getTime","clearInterval","animateFoundPath","foundPath","setPath","intervalMs","resetActive","removeTracesOfTravel","array","currentIndex","temporaryValue","randomIndex","floor","random","oppositeDirection","nextNode","setParent","setVisited"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ccde42c78bca2bb3d75","class MazeNode{\n\n  constructor(pos){\n    this.pos = pos;\n    this.walls = {};\n    this.visited = false;\n    this.directions = [\"N\", \"S\", \"E\", \"W\"];\n    this.directions.forEach(direction =>{\n      this.walls[direction] = true;\n    });\n\n    this.htmlnode = document.createElement('div');\n    this.htmlnode.classList.add(\"maze-node\");\n    this.htmlnode.id = `node-${pos[0]}-${pos[1]}`;\n    this.setWalls();\n\n    this.resetNode = this.resetNode.bind(this);\n    this.calculateHCost = this.calculateHCost.bind(this);\n    this.addAllWalls = this.addAllWalls.bind(this);\n    this.parent = null;\n    this.pathNode = false;\n    this.activeStatus = false;\n    this.isCurrent = false;\n    this.isGoal=false;\n\n    this.hCost = 0.0;\n    this.fCost = 0.0;\n    this.gCost = 0.0;\n  }\n\n  addAllWalls(directions=[\"N\", \"S\", \"E\", \"W\"]){\n    directions.forEach(direction =>{\n      this.walls[direction] = true;\n    });\n    this.setWalls();\n  }\n\n  carveWall(direction){\n    if(direction && this.directions.includes(direction)){\n      this.walls[direction] = false;\n      this.removeWalls();\n      this.setWalls();\n      return direction;\n    }\n    return null;\n  }\n\n  toggleActive(){\n    if(this.activeStatus){\n      this.activeStatus = false;\n      this.htmlnode.classList.remove('active-node');\n    }else{\n      this.activeStatus = true;\n      this.htmlnode.classList.add('active-node');\n    }\n  }\n\n  setGoal(){\n    if(this.isGoal === false){\n      this.isGoal = true;\n      this.htmlnode.classList.add('goal-node');\n    }\n  }\n  removeGoal(){\n    if(this.isGoal === true){\n      this.isGoal = false;\n      this.htmlnode.classList.remove('goal-node');\n    }\n  }\n\n  setActive(){\n    if(this.activeStatus === false){\n      this.activeStatus = true;\n      this.htmlnode.classList.add('active-node');\n    }\n  }\n\n  disableActive(){\n    if(this.activeStatus === true){\n      this.activeStatus = false;\n      this.htmlnode.classList.remove('active-node');\n    }\n  }\n\n  toggleCurrent(){\n    if(this.isCurrent === false){\n      this.isCurrent = true;\n      this.htmlnode.classList.add('current-node');\n    }else{\n      this.isCurrent = false;\n      this.htmlnode.classList.remove('current-node');\n    }\n  }\n\n  setPath(){\n    if(this.pathNode === true){\n      this.pathNode = false;\n      this.htmlnode.classList.remove('active-node');\n    }else{\n      this.pathNode = true;\n      this.htmlnode.classList.add('path-node');\n    }\n  }\n\n  node(){\n    return this.htmlnode;\n  }\n\n  setWalls(){\n    if(this.walls[\"N\"]){\n      this.htmlnode.classList.add(\"north-wall\");\n    }\n    if(this.walls[\"S\"]){\n      this.htmlnode.classList.add(\"south-wall\");\n    }\n    if(this.walls[\"E\"]){\n      this.htmlnode.classList.add(\"east-wall\");\n    }\n    if(this.walls[\"W\"]){\n      this.htmlnode.classList.add(\"west-wall\");\n    }\n  }\n\n  removeWalls(){\n    let classes = [\"north-wall\", \"south-wall\", \"east-wall\", \"west-wall\"];\n\n    classes.forEach( c => {\n      this.htmlnode.classList.remove(c);\n    });\n  }\n\n  resetNode(){\n    this.directions.forEach(direction =>{\n      this.walls[direction] = true;\n    });\n\n    this.parent = null;\n    this.pathNode = false;\n    this.activeStatus = false;\n    this.isCurrent = false;\n    this.visited = false;\n    this.isGoal = false;\n    this.htmlnode.className=\"maze-node\";\n\n    this.fCost = 0;\n    this.gCost = 0;\n\n    this.setWalls();\n    this.disableActive();\n  }\n\n  removeTracesOfTravel(){\n    this.parent = null;\n    this.pathNode = false;\n    this.activeStatus = false;\n    this.isCurrent = false;\n    this.visited = false;\n\n    this.fCost = 0;\n    this.gCost = 0;\n    if(!this.isGoal){\n      this.htmlnode.className=\"maze-node\";\n    }else{\n      this.htmlnode.className=\"maze-node goal-node\";\n    }\n    this.setWalls();\n  }\n\n  /* A* search helper methods*/\n  calculateHCost(endPos){\n\n    let a = (endPos[0] - this.pos[0]);\n    let b = (endPos[1] - this.pos[1]);\n\n    this.hCost = Math.sqrt((a*a + b*b));\n    return this.hCost;\n  }\n}\n\nexport default MazeNode;\n\n\n\n// WEBPACK FOOTER //\n// ./javascripts/maze_node.js","import MazeNode from './maze_node';\nimport MazeGrid from './maze_grid';\n\n\nlet handleMazeExtras = (maze, buttonsToEnable) => {\n  let generateMazeForm = document.querySelector('#generate-maze-form');\n  let astarGrid = document.querySelector('#generate-astar-maze-button');\n  let streetGridButton = document.querySelector('#generate-street-grid-button');\n  let slider= document.querySelector('#search-speed-slider');\n  let checkbox = document.querySelector('#instant-checkbox');\n\n  slider.defaultValue = 6;\n\n  let disableButtons = (buttonsToDisable)=>{\n    buttonsToDisable.forEach( button => button.disabled = true);\n  }\n\n  let timers = document.querySelectorAll(\"[id^='timer-']\");\n\n  generateMazeForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    timers.forEach(el => el.innerHTML = \"0 ms\");\n    disableButtons(buttonsToEnable);\n    maze.generateMaze(checkbox.checked, buttonsToEnable);\n  });\n\n  astarGrid.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    timers.forEach(el => el.innerHTML = \"0 ms\");\n    maze.generateAstarGrid();\n  });\n\n  streetGridButton.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    timers.forEach(el => el.innerHTML = \"0 ms\");\n    maze.generateStreetGrid();\n  });\n};\n\nlet handleSearchExtras = (maze, buttonsToEnable) => {\n  let dfsButton = document.querySelector('#dfs');\n  let bfsButton = document.querySelector('#bfs');\n  let astarButton = document.querySelector('#astar');\n\n  let disableButtons = (buttonsToDisable)=>{\n    buttonsToDisable.forEach( button => button.disabled = true);\n  }\n\n  dfsButton.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    disableButtons(buttonsToEnable);\n    maze.dfs(buttonsToEnable);\n  });\n\n  bfsButton.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    disableButtons(buttonsToEnable);\n    maze.bfs(buttonsToEnable);\n  });\n\n  astarButton.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    disableButtons(buttonsToEnable);\n    maze.aStar(buttonsToEnable);\n  });\n\n}\n\nlet handleModalButtons = () =>{\n  let generatorsModalButton = document.getElementById('#generators-modal');\n  let solversModalButton = document.getElementById('#solvers-modal');\n  let modalDiv = document.querySelector('#modal-location');\n\n  generatorsModalButton.addEventListener(\"click\", (e) =>{\n    e.preventDefault();\n    let html = '<div class=\"modal-backdrop\"><div class=\"modal-inner\"><h2>Maze Generators</h2>';\n    html+= '<p>These buttons are used to generate different grids, which are then used to test the Maze Solvers algorithms</p>';\n    html+='<div class=\"close-modal\">X</div>';\n    html+= '</div></div>';\n    modalDiv.innerHTML = html;\n    document.querySelector('.modal-backdrop').addEventListener(\"click\", (e) =>{\n      e.preventDefault();\n      modalDiv.innerHTML = '';\n    });\n  });\n\n  solversModalButton.addEventListener(\"click\", (e) =>{\n    e.preventDefault();\n    let html = '<div class=\"modal-backdrop\"><div class=\"modal-inner\"><h2>Maze Solvers</h2>';\n    html+= '<p><h2>Description</h2>These buttons are used to find a path from the start point to the end point indicated on the grid</p>';\n    html+= '<p><h2>DFS</h2> Depth First Search Algorithm. This algorithm traverses a path until it finds a dead end, then backtracks to the next fork where it can continue. Rinse, repeat, until a path is found.</p>';\n    html+= '<p><h2>BFS</h2> Breadth First Search Algorithm. This algorithm traverses a path until it reaches a fork, and at each fork, it splits up and traverses down each path evenly. Rinse, repeat, until a path is found.</p>';\n    html+= '<p><h2>A*</h2> A* search algorithm. This algorithm uses a heuristic to keep track of estimated distance to the goal location, and traverses the grid based on the shortest distances indicated by the heuristic.</p>';\n    html+='<div class=\"close-modal\">X</div>';\n    html+= '</div></div>';\n    modalDiv.innerHTML = html;\n    document.querySelector('.modal-backdrop').addEventListener(\"click\", (e) =>{\n      e.preventDefault();\n      modalDiv.innerHTML = '';\n    });\n  });\n\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n\n  let generateMazeButton = document.querySelector('#generate-maze-button');\n  let dfsButton = document.querySelector('#dfs');\n  let bfsButton = document.querySelector('#bfs');\n  let astarButton = document.querySelector('#astar');\n  let astarGrid = document.querySelector('#generate-astar-maze-button');\n  let streetGridButton = document.querySelector('#generate-street-grid-button');\n\n  let buttons = [dfsButton, bfsButton, generateMazeButton, astarButton, astarGrid, streetGridButton];\n\n  let root = document.querySelector('#root');\n\n  window.maze = new MazeGrid(45);\n\n  handleMazeExtras(maze, buttons);\n  handleSearchExtras(maze, buttons);\n  handleModalButtons();\n\n  maze.generateMaze(true, []);\n\n  root.appendChild(maze.grid);\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./javascripts/main.js","import MazeNode from './maze_node';\n\nclass MazeGrid{\n  // origin is top left, [0][0]\n  // [row][col]\n  constructor(dimensions=8){\n    this.mazeNodes = new Array(dimensions);\n    for(let idx = 0; idx < dimensions; idx++){\n      this.mazeNodes[idx] = new Array(dimensions);\n    }\n    this.dimensions = dimensions;\n    this.endPos = [this.dimensions-1, this.dimensions-1];\n    this.constructGrid();\n\n    this.carveWall = this.carveWall.bind(this);\n    this.checkIfLegal = this.checkIfLegal.bind(this);\n    this.carveWallsBetweenNodes = this.carveWallsBetweenNodes.bind(this);\n    this.nextPos = this.nextPos.bind(this);\n    this.validPos = this.validPos.bind(this);\n    this.neighborNodes = this.neighborNodes.bind(this);\n    this.validNeighborNodes = this.validNeighborNodes.bind(this);\n    this.generateMaze = this.generateMaze.bind(this);\n    this.createMaze = this.createMaze.bind(this);\n    this.animateMazeCreation = this.animateMazeCreation.bind(this);\n    this.getNode = this.getNode.bind(this);\n    this.dfs = this.dfs.bind(this);\n    this.dfsearch = this.dfsearch.bind(this);\n    this.bfs = this.bfs.bind(this);\n    this.bfsearch = this.bfsearch.bind(this);\n    this.resetPaths = this.resetPaths.bind(this);\n    this.aStar = this.aStar.bind(this);\n    this.aStarSearch = this.aStarSearch.bind(this);\n    this.mazeSteps = [];\n    this.visitedPath = [];\n\n  }\n\n  generateMaze(instant=false, buttonsToEnable, startingPos=[0,0]){\n    this.resetNodes();\n    this.createMaze(startingPos);\n    this.resetVisited();\n    if(!instant){\n      this.animateMazeCreation(1, buttonsToEnable);\n    }\n    else{\n      for(let i = 0; i < this.mazeSteps.length; i++){\n        this.carveWall(this.mazeSteps[i].pos, this.mazeSteps[i].direction);\n      }\n      this.enableButtons(buttonsToEnable);\n    }\n    this.endPos = [this.dimensions-1, this.dimensions-1];\n    this.getNode(this.endPos).setGoal();\n\n  }\n\n  generateAstarGrid(buttonsToEnable, startingPos=[0,0]){\n    this.resetNodes();\n\n    let directions = [\"N\", \"S\", \"E\", \"W\"];\n    this.endPos = [31, 35];\n    this.getNode(this.endPos).setGoal();\n\n\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        let currentNode = this.mazeNodes[i][j];\n        directions.forEach( direction =>{\n          this.carveWall(currentNode.pos, direction);\n        });\n        currentNode.calculateHCost(this.endPos);\n      }\n    }\n\n    let row = 30;\n    for(let i = 15; i < 40; i++ ){\n      // this.getNode([35, i]).addAllWalls();\n      this.fillSurroundingWall([row, i]);\n    }\n\n    let col = 15;\n    for(let i = 31; i < 37; i++ ){\n      // this.getNode([35, i]).addAllWalls();\n      this.fillSurroundingWall([i, col]);\n    }\n\n  }\n\n  generateStreetGrid(buttonsToEnable, startingPos=[0,0]){\n    this.resetNodes();\n\n    let directions = [\"N\", \"S\", \"E\", \"W\"];\n    this.endPos = [this.dimensions-1, this.dimensions-1];\n    this.getNode(this.endPos).setGoal();\n\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        let currentNode = this.mazeNodes[i][j];\n        directions.forEach( direction =>{\n          this.carveWall(currentNode.pos, direction);\n        });\n        currentNode.calculateHCost(this.endPos);\n      }\n    }\n\n    let toggle = false;\n\n    for(let i = 1 ; i < this.dimensions-1; i+=2){\n      for(let j = 0; j < this.dimensions-1; j++){\n        if(toggle){\n          this.fillSurroundingWall([i,j]);\n        }\n        toggle = !toggle;\n      }\n    }\n  }\n\n  dfs(buttonsToEnable, endPos){\n    this.resetPaths();\n\n    if(!endPos){\n      endPos = this.endPos;\n    }\n\n    let stack = [];\n    let foundNode = this.dfsearch([0,0], endPos, stack);\n\n    this.animateVisitedPath(foundNode, buttonsToEnable, \"timer-dfs\");\n  }\n\n  bfs(buttonsToEnable, endPos){\n    this.resetPaths();\n\n    if(!endPos){\n      endPos = this.endPos;\n    }\n\n    let queue = [];\n    let foundNode = this.bfsearch([0,0], endPos, queue);\n    this.animateVisitedPath(foundNode, buttonsToEnable, \"timer-bfs\");\n  }\n\n  aStar(buttonsToEnable, endPos){\n    this.resetPaths();\n\n    if(!endPos){\n      endPos = this.endPos;\n    }\n\n    let foundNode = this.aStarSearch([0,0], endPos);\n\n    this.animateVisitedPath(foundNode, buttonsToEnable, \"timer-astar\");\n  }\n\n  /*  internal use methods   */\n  getLowestFCost(openSet){\n    let openList = Array.from(openSet);\n    let fCost = openList[0].fCost ? openList[0].fCost : 0;\n    let node = openList[0];\n\n    for(let i = 1; i < openList.length; i++){\n      let currentNode = openList[i];\n      if(currentNode.fCost < fCost){\n        node = currentNode;\n        fCost = currentNode.fCost;\n      }\n    }\n    return node;\n  }\n\n  fillSurroundingWall(pos){\n    let row = pos[0]\n    let col = pos[1]\n\n    this.getNode([row, col-1]).addAllWalls([\"E\"]);\n    this.getNode([row, col+1]).addAllWalls([\"W\"]);\n    this.getNode([row+1, col]).addAllWalls([\"N\"]);\n    this.getNode([row-1, col]).addAllWalls([\"S\"]);\n  }\n\n  aStarSearch(startPos=[0,0], endPos){\n\n    let openList = new Set();\n    openList.add(this.getNode(startPos))\n    let closedList = new Set();\n\n    while(openList.size > 0){\n      let currentNode = this.getLowestFCost(openList);\n      this.visitedPath.push(currentNode);\n      if((currentNode.pos[0] === endPos[0]) && (currentNode.pos[1] === endPos[1])){\n        // found\n        return currentNode;\n      }\n\n      closedList.add(currentNode);\n      openList.delete(currentNode);\n\n      let neighborNodes = this.validNeighborNodes(currentNode);\n\n      Object.keys(neighborNodes).forEach( direction =>{\n        let neighbor = neighborNodes[direction].node;\n        if( closedList.has(neighbor) ){\n          // not a valid node to process, continue\n        }else{\n\n          let gCost = currentNode.gCost + 0.1;\n          let gCostIsBest = false;\n\n          if(!openList.has(neighbor)){\n            gCostIsBest = true;\n            openList.add(neighbor);\n          }else if( gCost < neighbor.gCost ){\n            gCostIsBest = true;\n          }\n\n          if(gCostIsBest){\n            neighbor.parent = currentNode;\n            neighbor.gCost = gCost;\n            neighbor.fCost = neighbor.gCost + neighbor.hCost;\n          }\n        }// end else\n      });// end forEach\n    }// end while\n    return null;\n  }\n\n  createMaze(currentPos){\n    let neighborNodes = this.neighborNodes(currentPos);\n    let directions = this.shuffle(Object.keys(neighborNodes));\n    this.mazeNodes[currentPos[0]][currentPos[1]].visited = true;\n\n\n    directions.forEach( direction =>{\n      if(neighborNodes[direction] && neighborNodes[direction].node.visited === false){\n        this.mazeSteps.push( {pos: currentPos, direction: direction} );\n        neighborNodes[direction].node.visited = true;\n        this.createMaze(neighborNodes[direction].node.pos);\n      }\n    });\n  }\n\n  dfsearch(currentPos, endPos, stack){\n    let currentNode = this.getNode(currentPos);\n\n    if((currentPos[0] === endPos[0]) && (currentPos[1] === endPos[1])){\n      //found\n      currentNode.visited = true;\n      return currentNode;\n    }\n\n    let validMoves = this.validNeighborNodes(currentNode, true);\n\n    stack = stack.concat(validMoves);\n\n    while(stack.length > 0){\n      let n = stack.pop();\n      currentNode.visited = true;\n      this.visitedPath.push(currentNode);\n      return this.dfsearch(n.node.pos, endPos, stack);\n    }\n  }\n\n  bfsearch(currentPos, endPos, queue){\n    let current = this.getNode(currentPos);\n    queue.push({node: current});\n\n\n    while(queue.length > 0){\n      let c = queue.shift()\n\n      if((c.node.pos[0] === endPos[0]) && (c.node.pos[1] === endPos[1])){\n        //found\n        c.visited = true;\n        return c.node;\n      }\n\n      let validMoves = this.validNeighborNodes(c.node, true, true);\n      queue = queue.concat(validMoves);\n      c.node.visited = true;\n      this.visitedPath.push(c.node);\n    }\n  }\n\n\n  animateVisitedPath(foundNode, buttonsToEnable, timerId){\n    let visitedPath = this.visitedPath;\n    let timer = document.getElementById(timerId);\n    let animationSpeed = document.getElementById('search-speed-slider').value;\n\n    let startTime = new Date();\n    let currentTime = new Date();\n\n    let i = 0;\n    let intervalId = null;\n    intervalId = setInterval( ()=>{\n      if(i === 0){\n        startTime = new Date();\n      }\n      if(i < visitedPath.length){\n        visitedPath[i].toggleCurrent();\n        visitedPath[i].setActive();\n        if(i+1 < visitedPath.length){\n          visitedPath[i+1].toggleCurrent();\n        }\n        i+=1;\n        currentTime = new Date();\n        timer.innerHTML = currentTime.getTime() - startTime.getTime() + \" ms\";\n      }else{\n        clearInterval(intervalId);\n        this.animateFoundPath(foundNode, buttonsToEnable);\n      }\n    }, animationSpeed);\n  }\n\n  animateFoundPath(foundNode, buttonsToEnable){\n    let foundPath = [];\n\n    while(foundNode.parent){\n      foundPath.push(foundNode);\n      foundNode = foundNode.parent;\n    }\n\n    let i = 0;\n    let intervalId = null;\n    intervalId = setInterval( ()=>{\n      if(i < foundPath.length){\n        foundPath[i].setPath();\n        i+=1;\n      }else{\n        clearInterval(intervalId);\n        this.getNode([0,0]).setPath();\n        this.enableButtons(buttonsToEnable);\n      }\n    }, 3);\n  }\n\n  enableButtons(buttons){\n    buttons.forEach((button) =>{\n      button.disabled = false;\n    });\n  }\n\n  animateMazeCreation(intervalMs, buttonsToEnable){\n    let i = 0;\n\n    let intervalId = null;\n    intervalId = setInterval( ()=>{\n      if(i < this.mazeSteps.length){\n        if( this.carveWall(this.mazeSteps[i].pos, this.mazeSteps[i].direction) ){\n          this.mazeNodes[this.mazeSteps[i].pos[0]][this.mazeSteps[i].pos[1]].setActive();\n          this.nextPos(this.mazeSteps[i].pos, this.mazeSteps[i].direction).setActive();\n        }\n        i+=1;\n      }else{\n        clearInterval(intervalId);\n        this.mazeSteps = [];\n        let generateMazeButton = document.querySelector('#generate-maze-button');\n        this.enableButtons(buttonsToEnable);\n        this.resetActive();\n      }\n    }, intervalMs);\n  }\n\n  resetPaths(){\n    this.resetVisited();\n    // this.mazeSteps = [];\n    this.visitedPath = [];\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        this.mazeNodes[i][j].removeTracesOfTravel();\n      }\n    }\n  }\n\n  resetNodes(){\n    this.mazeSteps = [];\n    this.visitedPath = [];\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        this.mazeNodes[i][j].resetNode();\n      }\n    }\n  }\n\n  resetVisited(){\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        this.mazeNodes[i][j].visited = false;\n      }\n    }\n  }\n\n  resetActive(){\n    for(let i = 0 ; i < this.dimensions ; i++){\n      for(let j = 0; j < this.dimensions; j++){\n        this.mazeNodes[i][j].disableActive();\n      }\n    }\n  }\n\n  // shuffle source: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n  shuffle(array) {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  constructGrid(endPos){\n    if(!endPos){\n      endPos = this.endPos;\n    }\n    this.grid = document.createElement('div');\n\n    this.grid.classList.add('maze-grid');\n\n    for(let i = 0 ; i < this.dimensions ; i++){\n      let row = document.createElement('div');\n      row.id = `row-${i}`;\n      for(let j = 0; j < this.dimensions; j++){\n        this.mazeNodes[i][j] = new MazeNode([i,j]);\n        this.mazeNodes[i][j].calculateHCost(this.endPos);\n        row.appendChild(this.mazeNodes[i][j].node());\n      }\n      this.grid.appendChild(row);\n    }\n  }\n\n  carveWall(pos, direction){\n    if(this.validPos(pos)){\n      if(this.checkIfLegal(pos, direction)){\n        this.carveWallsBetweenNodes(pos, direction);\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false;\n    }\n  }\n\n  checkIfLegal(pos, direction){\n    let row = pos[0];\n    let col = pos[1];\n\n    if(row === 0){// top row\n      if(direction == \"N\"){\n        return false;\n      }\n    }\n    if(row === (this.dimensions-1)){// bottom row\n      if(direction == \"S\"){\n        return false;\n      }\n    }\n    if(col === 0){// leftmost col\n      if(direction == \"W\"){\n        return false;\n      }\n    }\n    if(col === (this.dimensions-1)){// rightmost col\n      if(direction == \"E\"){\n        return false;\n      }\n    }\n    return true;\n  }\n\n  carveWallsBetweenNodes(pos, direction){\n    this.mazeNodes[pos[0]][pos[1]].carveWall(direction)\n    let nextPos = this.nextPos(pos, direction);\n    if(nextPos){\n      nextPos.carveWall(this.oppositeDirection(direction));\n    }\n  }\n\n  oppositeDirection(direction){\n    if(direction == \"N\"){\n      return \"S\";\n    }\n    if(direction == \"S\"){\n      return \"N\";\n    }\n    if(direction == \"E\"){\n      return \"W\";\n    }\n    if(direction == \"W\"){\n      return \"E\";\n    }\n  }\n\n  nextPos(currentPos, direction){\n    let nextPos = [ currentPos[0], currentPos[1] ];\n    if(direction == \"N\"){\n      nextPos[0]-= 1;\n    }else if (direction == \"S\") {\n      nextPos[0]+= 1;\n    }else if (direction == \"E\") {\n      nextPos[1]+= 1;\n    }else if (direction == \"W\") {\n      nextPos[1]-= 1;\n    }\n    if(this.validPos(nextPos)){\n      return this.mazeNodes[nextPos[0]][nextPos[1]];\n    }\n    return null;\n  }\n\n  neighborNodes(pos){\n\n    let neighborNodes = {};\n\n    let directions = [\"N\", \"S\", \"E\", \"W\"];\n\n    directions.forEach(direction =>{\n      let nextNode = this.nextPos(pos, direction);\n      if(nextNode !== null ){\n        neighborNodes[direction] = { direction: direction, node: nextNode };\n      }\n    });\n\n    return neighborNodes;\n  }\n\n  validNeighborNodes(currentNode, setParent=false, setVisited=false){\n    let pos = currentNode.pos;\n    let neighborNodes = this.neighborNodes(pos);\n\n    let validMoves = [];\n\n    Object.keys(neighborNodes).forEach((direction)=>{\n      if(!currentNode.walls[direction] && !neighborNodes[direction].node.visited){\n        validMoves.push( neighborNodes[direction] );\n        if(setParent){\n          neighborNodes[direction].node.parent = currentNode;\n        }\n        if(setVisited){\n          neighborNodes[direction].node.visited = true;\n        }\n      }\n    });\n    return validMoves;\n  }\n\n  validPos(pos){\n    if(pos.length < 2){\n      return false;\n    }\n    if(pos[0] >= this.dimensions || pos[0] < 0){\n      return false;\n    }\n    if(pos[1] >= this.dimensions || pos[1] < 0){\n      return false;\n    }\n    return true;\n  }\n\n  getNode(pos){\n    return this.mazeNodes[ pos[0]][ pos[1] ];\n  }\n}\n\nexport default MazeGrid;\n\n\n\n// WEBPACK FOOTER //\n// ./javascripts/maze_grid.js"],"sourceRoot":""}